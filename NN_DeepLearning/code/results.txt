"""
Created on Fri Jan 17 09:42:35 2020

@author: somnath
"""
-------------------------------------------------
net = Network([784, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=50,
        mini_batch_size=10,
        eta=3.0,
        test_data=test)
Accuracy: 96.68
-------------------------------------------------
net = Network([784, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=20,
        eta=3.0,
        test_data=test)
Accuracy: 77.38
-------------------------------------------------
net = Network([784, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=5,
        eta=3.0,
        test_data=test)
Accuracy: 71.10

1st run:
-------------------------------------------------
net = Network([784, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=3.0,
        test_data=test)
Accuracy: 83.57

2nd run:
-------------------------------------------------
net = Network([784, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=3.0,
        test_data=test)
Accuracy: 75.92

3rd run:
------------------------------------------------
net = Network([784, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=3.0,
        test_data=test)
Accuracy: 84.05
------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=3.0,
        test_data=test)
Accuracy: 87.21
------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=4.0,
        test_data=test)
Accuracy: 96.75
------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=5.0,
        test_data=test)
Accuracy: 96.41
------------------------------------------------
net = Network([784, 100, 100, 50, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=5.0,
        test_data=test)
Accuracy: 96.21
-------------------------------------------------
net = Network([784, 100, 100, 50, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=6.0,
        test_data=test)
Accuracy: 95.85
-------------------------------------------------
net = Network([784, 100, 100, 50, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=4.0,
        test_data=test)
Accuracy: 96.33
-------------------------------------------------
net = Network([784, 100, 100, 50, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=3.0,
        test_data=test)
Accuracy: 96.73
-------------------------------------------------
net = Network([784, 100, 100, 50, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=2.0,
        test_data=test)
Accuracy: 96.31
__________________________________________________
net = Network([784, 100, 100, 50, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=10,
        eta=2.5,
        test_data=test)
Accuracy: 96.56
__________________________________________________
net = Network([784, 100, 100, 50, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=15,
        eta=3.0,
        test_data=test)
Accuracy: 96.12
---------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=15,
        eta=4.0,
        test_data=test)
Accuracy: 96.49
---------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=15,
        eta=3.0,
        test_data=test)
Accuracy: 96.33
----------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=20,
        eta=3.0,
        test_data=test)
Accuracy: 87.12
-----------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=20,
        eta=4.0,
        test_data=test)
Accuracy: 96.14
-------------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=30,
        mini_batch_size=20,
        eta=5.0,
        test_data=test)
Accuracy: 87.23
--------------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=50,
        mini_batch_size=10,
        eta=4.0,
        test_data=test)
Accuracy: 97.03
---------------------------------------------------------
net = Network([784, 100, 100, 10])
train, validate, test = load_data_wrapper()
net.SGD(training_data=train,
        epochs=100,
        mini_batch_size=10,
        eta=4.0,
        test_data=test)
Accuracy: 97.10
----------------------------------------------------------
size = [784, 100, 100, 10]
    epochs = 50
    mini_batch_size = 10
    eta = 4.0
    lmbda = 0.5
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
Accuracy: 97.21
----------------------------------------------------------
size = [784, 100, 100, 10]
    epochs = 50
    mini_batch_size = 10
    eta = 4.0
    lmbda = 0.5
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L1'
 Accuracy: 96.81
 -------------------------------------------------
 size = [784, 100, 100, 10]
    epochs = 50
    mini_batch_size = 10
    eta = 4.0
    lmbda = 1.0
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
  Accuracy: 97.25
  --------------------------------------------------
  size = [784, 200, 10]
    epochs = 50
    mini_batch_size = 10
    eta = 4.0
    lmbda = 1.0
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
 Accuracy: 97.66
 ----------------------------------------------------
 size = [784, 300, 10]
    epochs = 50
    mini_batch_size = 10
    eta = 4.0
    lmbda = 1.0
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
 Accuracy: 97.84
 ----------------------------------------------------------
 size = [784, 500, 10]
    epochs = 50
    mini_batch_size = 10
    eta = 4.0
    lmbda = 1.0
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
 Accuracy: 97.44
 ------------------------------------------------------------
size = [784, 500, 10]
    epochs = 50
    mini_batch_size = 20
    eta = 4.0
    lmbda = 2.0
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
 Accuracy: 97.05
 ------------------------------------------------
 size = [784, 500, 10]
    epochs = 50
    mini_batch_size = 20
    eta = 4.0
    lmbda = 1.0
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
 Accuracy: 97.75
 ----------------------------------------------
 size = [784, 500, 10]
    epochs = 50
    mini_batch_size = 20
    eta = 4.0
    lmbda = 0.5
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
Accuracy: 98.23
--------------------------------------------------
size = [784, 600, 10]
    epochs = 50
    mini_batch_size = 20
    eta = 4.0
    lmbda = 0.5
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
 Accuracy: 97.80
 --------------------------------------------------------
 size = [784, 800, 10]
    epochs = 50
    mini_batch_size = 20
    eta = 3.0
    lmbda = 1.0
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
  Accuracy: 97.93
  --------------------------------------------------------
  size = [784, 500, 10]
    epochs = 50
    mini_batch_size = 20
    eta = 4.0
    lmbda = 0.5
    monitor_evaluation_cost = False
    monitor_evaluation_accuracy = True
    monitor_training_cost = False
    monitor_training_accuracy = True
    monitor_weight_vector_length = False
    regularization = 'L2'
  Accuracy: 98.28
  -----------------------------------------------------------
  size = [784, 80, 10]
    epochs = 30
    mini_batch_sz = 10
    eta = 0.08
    decay = 0.0001
    lmbda = 0.01
    evaluation_cost = False
    evaluation_accuracy = True
    training_cost = False
    training_accuracy = False
    wt_vect_length = False
    reg = 'L2'
  Accuracy: 97.68
  -------------------------------------------------------------
  size = [784, 100, 10]
    epochs = 30
    mini_batch_sz = 10
    eta = 0.08
    decay = 0.0001
    lmbda = 0.01
    evaluation_cost = False
    evaluation_accuracy = True
    training_cost = False
    training_accuracy = False
    wt_vect_length = False
    reg = 'L2'
  Accuracy: 97.76
  ---------------------------------------------------------------
  size = [784, 150, 10]
    epochs = 30
    mini_batch_sz = 10
    eta = 0.08
    decay = 0.0001
    lmbda = 0.01
    evaluation_cost = False
    evaluation_accuracy = True
    training_cost = False
    training_accuracy = False
    wt_vect_length = False
    reg = 'L2'
 Accuracy: 97.85
 -------------------------------------------------------
 size = [784, 200, 10]
    epochs = 30
    mini_batch_sz = 10
    eta = 0.08
    decay = 0.0001
    lmbda = 0.01
    evaluation_cost = False
    evaluation_accuracy = True
    training_cost = False
    training_accuracy = False
    wt_vect_length = False
    reg = 'L2'
 Accuracy: 98.08
 ----------------------------------------------------------
 size = [784, 200, 10]
    epochs = 30
    mini_batch_sz = 10
    eta = 0.08
    decay = 0.0001
    lmbda = 0.01
    dropout = 0.2
    evaluation_cost = False
    evaluation_accuracy = True
    training_cost = False
    training_accuracy = False
    wt_vect_length = False
    reg = 'L2'
 Accuracy: 97.83
  -------------------------------------------------------------
  size = [784, 300, 10]
    epochs = 30
    mini_batch_sz = 10
    eta = 0.08
    decay = 0.0001
    lmbda = 0.01
    dropout = 0.02
    evaluation_cost = False
    evaluation_accuracy = True
    training_cost = False
    training_accuracy = False
    wt_vect_length = False
    reg = 'L2'
 Accuracy: 98.14
 ----------------------------------------------

Convolutional Neural Network Tests
-------------------------------------------------------------------------------------
TEST 1.
--------------------------------------------------------------------------------------
def conv_main():
    train, validation, test = load_data_shared('data/mnist_expanded.pkl.gz')
    mini_batch_size = 10
    epochs = 30
    net = Network([ConvPoolLayer(input_shape=(mini_batch_size, 1, 28, 28),
                                 filter_shape=(20, 1, 5, 5),
                                 poolsize=(2, 2),
                                 activation_fn=relu),
                                 ConvPoolLayer(input_shape=(mini_batch_size, 20, 12, 12),
                                     filter_shape=(40, 20, 5, 5),
                                     poolsize=(2, 2),
                                     activation_fn=relu),
                       FullyConnectedLayer(n_in=40 * 4 * 4,
                                           n_out=1000,
                                           activation_fn=relu,
                                           p_dropout=0.5),
                       SoftmaxLayer(n_in=1000,
                                    n_out=10)],
                      mini_batch_size)
    net.SGD(train,
            epochs=epochs,
            mini_batch_size=mini_batch_size,
            eta=0.03,
            validation_data=validation,
            test_data=test,
            lmbda=0.1)
Test Accuracy: 99.54%
-------------------------------------------------------------------------------------
def conv_main():
    train, validation, test = load_data_shared('data/mnist_expanded.pkl.gz')
    mini_batch_size = 10
    epochs = 30
    net = Network([ConvPoolLayer(input_shape=(mini_batch_size, 1, 28, 28),
                                 filter_shape=(20, 1, 5, 5),
                                 poolsize=(2, 2),
                                 activation_fn=relu),
                   ConvPoolLayer(input_shape=(mini_batch_size, 20, 12, 12),
                                 filter_shape=(40, 20, 5, 5),
                                 poolsize=(2, 2),
                                 activation_fn=relu),
                   FullyConnectedLayer(n_in=40 * 4 * 4,
                                       n_out=1000,
                                       activation_fn=relu,
                                       p_dropout=0.5),
                   FullyConnectedLayer(n_in=1000,
                                       n_out=1000,
                                       activation_fn=relu,
                                       p_dropout=0.5),
                   SoftmaxLayer(n_in=1000,
                                n_out=10)],
                  mini_batch_size)
    net.SGD(train,
            epochs=epochs,
            mini_batch_size=mini_batch_size,
            eta=0.03,
            validation_data=validation,
            test_data=test,
            lmbda=0.1)

Test Accuracy: 99.57%